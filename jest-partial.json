{"numFailedTestSuites":3,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761544668992,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1761544669947,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\context\\WalletContext.test.tsx: Missing semicolon. (20:71)\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m \u001b[36mconst\u001b[39m mockedList \u001b[33m=\u001b[39m require(\u001b[32m'../services/api'\u001b[39m)\u001b[33m.\u001b[39mwalletService\u001b[33m.\u001b[39mlistWallets \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m\n     \u001b[90m 22 |\u001b[39m type \u001b[33mCtx\u001b[39m \u001b[33m=\u001b[39m \u001b[33mReturnType\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m useWalletContext\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mHarness\u001b[39m \u001b[33m=\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39mforwardRef\u001b[33m<\u001b[39m\u001b[33mCtx\u001b[39m\u001b[33m,\u001b[39m {}\u001b[33m>\u001b[39m((props\u001b[33m,\u001b[39m ref) \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1507:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1252:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:612:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:482:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:419:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1443:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1417:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:88:25)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:86:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:29:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:50:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:41:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","name":"C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\context\\WalletContext.test.tsx","startTime":1761544669947,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1761544669947,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\hooks\\useApiConfig.test.tsx: Missing semicolon. (18:37)\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m \u001b[36mconst\u001b[39m mockedPing \u001b[33m=\u001b[39m systemService\u001b[33m.\u001b[39mping \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMockedFunction\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m systemService\u001b[33m.\u001b[39mping\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m\n     \u001b[90m 20 |\u001b[39m type \u001b[33mRefT\u001b[39m \u001b[33m=\u001b[39m \u001b[33mUseApiConfigResult\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mHarness\u001b[39m \u001b[33m=\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39mforwardRef\u001b[33m<\u001b[39m\u001b[33mRefT\u001b[39m\u001b[33m,\u001b[39m {}\u001b[33m>\u001b[39m((props\u001b[33m,\u001b[39m ref) \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1507:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1252:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:612:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:482:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:419:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1443:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1417:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:88:25)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:86:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:29:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:50:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:41:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","name":"C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\hooks\\useApiConfig.test.tsx","startTime":1761544669947,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1761544669947,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\services\\api.test.ts: Missing semicolon. (10:25)\n\n    \u001b[0m \u001b[90m  8 |\u001b[39m\n     \u001b[90m  9 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'axios'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m mockedAxios \u001b[33m=\u001b[39m axios \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMocked\u001b[39m\u001b[33m<\u001b[39m\u001b[36mtypeof\u001b[39m axios\u001b[33m>\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 11 |\u001b[39m \u001b[36mconst\u001b[39m { getFeatureFlags } \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mrequireMock(\u001b[32m'../utils/featureFlags'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 12 |\u001b[39m\n     \u001b[90m 13 |\u001b[39m describe(\u001b[32m'services/api - mock backend'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:95:45)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1507:19)\u001b[22m\n      \u001b[2mat Parser.semicolon (\u001b[22mnode_modules/@babel/parser/src/parser/util.ts\u001b[2m:149:10)\u001b[22m\n      \u001b[2mat Parser.parseVarStatement (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1252:10)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:612:21)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:482:17)\u001b[22m\n      \u001b[2mat Parser.parseModuleItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:419:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1443:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1417:10)\u001b[22m\n      \u001b[2mat Parser.parseProgram (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:229:10)\u001b[22m\n      \u001b[2mat Parser.parseTopLevel (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:203:25)\u001b[22m\n      \u001b[2mat Parser.parse (\u001b[22mnode_modules/@babel/parser/src/parser/index.ts\u001b[2m:88:25)\u001b[22m\n      \u001b[2mat parse (\u001b[22mnode_modules/@babel/parser/src/index.ts\u001b[2m:86:38)\u001b[22m\n      \u001b[2mat parser (\u001b[22mnode_modules/@babel/core/src/parser/index.ts\u001b[2m:29:19)\u001b[22m\n          at parser.next (<anonymous>)\n      \u001b[2mat normalizeFile (\u001b[22mnode_modules/@babel/core/src/transformation/normalize-file.ts\u001b[2m:50:24)\u001b[22m\n          at normalizeFile.next (<anonymous>)\n      \u001b[2mat run (\u001b[22mnode_modules/@babel/core/src/transformation/index.ts\u001b[2m:41:36)\u001b[22m\n          at run.next (<anonymous>)\n      \u001b[2mat transform (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:29:20)\u001b[22m\n          at transform.next (<anonymous>)\n      \u001b[2mat evaluateSync (\u001b[22mnode_modules/gensync/index.js\u001b[2m:251:28)\u001b[22m\n      \u001b[2mat fn (\u001b[22mnode_modules/gensync/index.js\u001b[2m:89:14)\u001b[22m\n      \u001b[2mat stopHiding - secret - don't use this - v1 (\u001b[22mnode_modules/@babel/core/src/errors/rewrite-stack-trace.ts\u001b[2m:99:14)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/@babel/core/src/transform.ts\u001b[2m:66:52)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:619:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:765:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22mnode_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:822:19)\u001b[22m\n","name":"C:\\Users\\plant\\Desktop\\Rust区块链\\Wallet front-end\\blockchain-wallet-ui\\src\\services\\api.test.ts","startTime":1761544669947,"status":"failed","summary":""}],"wasInterrupted":false,"coverageMap":{}}